name: Workflow For Build and Deploy

on:
  push:
    branches:
      - feature/add_CD

jobs:
  build_backend_and_push_to_docker_hub:
    name: Push docker image of backend to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildbox
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: vladislavrotvash/sefer_backend:latest

  deploy:
    name: Deploy project on server
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Copy docker-compose-prod-start.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./infra/docker-compose-prod-start.yml"
          target: "~/test/infra/"
      - name: Copy nginx.conf via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./infra/nginx.conf"
          target: "~/test/infra/"
      # - name: Executing remote ssh commands to deploy
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USER }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd /home/${{ secrets.USER }}/diary-training/
      #       sudo docker compose -f docker-compose-prod-start.yml pull
      #       sudo docker compose -f docker-compose-prod-start.yml down
      #       sudo docker compose -f docker-compose-prod-start.yml up -d
